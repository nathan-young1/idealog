def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def keystoreProperties = new Properties()
   def keystorePropertiesFile = rootProject.file('key.properties')
   if (keystorePropertiesFile.exists()) {
       keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
   }

android {
    compileSdkVersion 30

    lintOptions {
        disable 'InvalidPackage'
        checkReleaseBuilds false
    }
    
    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.mobile.idealog"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
       release {
           keyAlias keystoreProperties['keyAlias']
           keyPassword keystoreProperties['keyPassword']
           storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
           storePassword keystoreProperties['storePassword']
       }
   }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.

            // Because the release apk was stuck on the splash screen, i added FROM HERE
            shrinkResources false
            minifyEnabled false
            // TO HERE
            signingConfig signingConfigs.release
        }
    }

    dependencies {
        def work_version = "2.5.0"

        // (Java only) implementation of workManager
        implementation "androidx.work:work-runtime:$work_version"

        // optional - RxJava2 support implementation of workManager
        implementation "androidx.work:work-rxjava2:$work_version"

        // optional - GCMNetworkManager support implementation of workManager
        implementation "androidx.work:work-gcm:$work_version"

        // optional - Test helpers implementation of workManager
        androidTestImplementation "androidx.work:work-testing:$work_version"

        // optional - Multiprocess support implementation of workManager
        implementation "androidx.work:work-multiprocess:$work_version"

        // Import the Firebase BoM
        implementation platform('com.google.firebase:firebase-bom:28.1.0')

        // Add the dependency for the Firebase SDK for Google Analytics
        // When using the BoM, don't specify versions in Firebase dependencies
        implementation 'com.google.firebase:firebase-analytics'

//      The dependencies for cloud firestore
        implementation 'com.google.firebase:firebase-firestore'

        // Declare the dependency for the Firebase Authentication library
        // When using the BoM, you don't specify versions in Firebase library dependencies
        implementation 'com.google.firebase:firebase-auth'

        // Also declare the dependency for the Google Play services library and specify its version
        implementation 'com.google.android.gms:play-services-auth:19.0.0'

//       The dependency for firebase functions
        implementation 'com.google.firebase:firebase-functions'

        // Add the dependencies for any other desired Firebase products
        // https://firebase.google.com/docs/android/setup#available-libraries
    }
}

flutter {
    source '../..'
}
